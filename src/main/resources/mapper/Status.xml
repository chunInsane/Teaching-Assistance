<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.acmicpc.mapper.StatusMapper">

    <!--resultMap-->
    <resultMap id="statusDtoResultMap" type="StatusDto">
        <id column="status_id" property="statusId"/>
        <result column="result" property="result"/>
        <result column="memory_cost" property="memoryCost"/>
        <result column="time_cost" property="timeCost"/>
        <result column="length" property="length"/>
        <result column="time" property="time"/>
        <result column="case_number" property="caseNumber"/>
        <result column="code_id" property="codeId"/>
        <result column="compile_info_id" property="compileInfoId"/>
        <result column="contest_id" property="contestId"/>
        <result column="language_id" property="languageId"/>
        <result column="problem_id" property="problemId"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="language" property="language"/>
        <result column="extension" property="extension"/>
        <result column="code_content" property="codeContent"/>
        <result column="data_count" property="dataCount"/>
        <result column="java_memory_limit" property="javaMemoryLimit"/>
        <result column="java_time_limit" property="javaTimeLimit"/>
        <result column="memory_limit" property="memoryLimit"/>
        <result column="time_limit" property="timeLimit"/>
        <result column="output_limit" property="outputLimit"/>
        <result column="is_spj" property="isSpj"/>
    </resultMap>

    <insert id="createStatus" parameterType="StatusDto" useGeneratedKeys="true" keyProperty="statusId">
        insert into tb_status(
        <trim suffixOverrides=",">
            <if test="userId != null">`user_id` , </if>
            <if test="problemId != null">`problem_id` , </if>
            <if test="result != null">`result` , </if>
            <if test="memoryCost != null">`memory_cost` , </if>
            <if test="timeCost != null">`time_cost` , </if>
            <if test="languageId != null">`language_id` , </if>
            <if test="length != null">`length`, </if>
            <if test="time != null">`time` , </if>
            <if test="contestId != null">`contest_id` , </if>
            <if test="caseNumber != null">`case_number` , </if>
            <if test="codeId != null">`code_id` , </if>
            <if test="compileInfoId != null">`compile_info_id` , </if>
        </trim>
        ) values(
        <trim suffixOverrides=",">
            <if test="userId != null">#{userId} , </if>
            <if test="problemId != null">#{problemId} , </if>
            <if test="result != null">#{result} , </if>
            <if test="memoryCost != null">#{memoryCost} , </if>
            <if test="timeCost != null">#{timeCost} , </if>
            <if test="languageId != null">#{languageId} , </if>
            <if test="length != null">#{length}, </if>
            <if test="time != null">#{time} , </if>
            <if test="contestId != null">#{contestId} , </if>
            <if test="caseNumber != null">#{caseNumber} , </if>
            <if test="codeId != null">#{codeId} , </if>
            <if test="compileInfoId != null">#{compileInfoId} , </if>
        </trim>
        )
    </insert>

    <select id="getStatusList" parameterType="map" resultMap="statusDtoResultMap">
        select
        s.status_id, s.result, s.memory_cost, s.time_cost, s.length, s.time, s.case_number,
        s.code_id, s.compile_info_id, s.contest_id, s.language_id, s.problem_id, s.user_id,
        u.user_name, u.nickname, l.name as `language`, l.extension, c.content as `code_content`, p.data_count,
        p.java_memory_limit, p.java_time_limit, p.memory_limit, p.time_limit, p.output_limit, p.is_spj
        from (
            select *
            from tb_status
            <trim prefix="where" suffixOverrides="and">
                <if test="startId != null"><![CDATA[`status_id` >= #{startId}]]> and </if>
                <if test="endId != null"><![CDATA[`status_id` <= #{endId}]]> and </if>
                <if test="startTime != null"><![CDATA[`time` >= #{startTime}]]> and </if>
                <if test="endTime != null"><![CDATA[`time` <= #{endTime}]]> and </if>
                <if test="userId != null">`user_id` = #{userId} and </if>
                <if test="problemId != null">`problem_id` = #{problemId} and </if>
                <if test="languageId != null">`language_id` = #{languageId} and </if>
                <if test="contestId != null">`contest_id` = #{contestId} and </if>
                <if test="result != null">`result` = #{result} and </if>
                <if test="results != null">
                  `result` in
                  <foreach collection="results" open="(" close=")" separator="," item="obj" index="ind">
                      #{obj}
                  </foreach>
                </if>
            </trim>
        ) as s
        left join (
            select *
            from tb_user
            <trim prefix="where" suffixOverrides="and">
                <if test="username != null">`username` like concat('%', #{username}, '%') and </if>
                <if test="userType != null">`type` != #{userType} , </if>
            </trim>
        ) as u on s.user_id = u.user_id
        left join tb_problem p on s.problem_id = p.problem_id
        left join tb_language l on s.language_id = l.language_id
        left join tb_code c on s.code_id = c.code_id
    </select>

    <update id="updateStatus" parameterType="StatusDto">
        update tb_status
        <trim prefix="set" suffixOverrides=",">
            <if test="userId != null">`user_id` = #{userId}, </if>
            <if test="problemId != null">`problem_id` = #{problemId}, </if>
            <if test="result != null">`result` = #{result}, </if>
            <if test="memoryCost != null">`memory_cost` = #{memoryCost}, </if>
            <if test="timeCost != null">`time_cost` = #{timeCost}, </if>
            <if test="languageId != null">`language_id` = #{languageId}, </if>
            <if test="length != null">`length` = #{length}, </if>
            <if test="time != null">`time` = #{time}, </if>
            <if test="contestId != null">`contest_id` = #{contestId}, </if>
            <if test="caseNumber != null">`case_number` = #{caseNumber}, </if>
            <if test="codeId != null">`code_id` = #{codeId}, </if>
            <if test="compileInfoId != null">`compile_info_id` = #{compileInfoId}, </if>
        </trim>
        where `status_id` = #{statusId}
    </update>

    <select id="findAllProblemIdsThatUser" parameterType="map" resultType="long">
        select distinct s.`problem_id`
        from (
          select *
          from tb_status
          <trim suffixOverrides="and" prefix="where">
              <if test="resultType != null">`result` = #{resultType} and </if>
              <if test="userId != null">`user_id` = #{userId} and </if>
          </trim>
        )as s
        left join tb_problem p on s.problem_id = p.problem_id
        left join (
            select *
            from tb_user
            <trim prefix="where" suffixOverrides="and">
                <if test="adminType != null">`type` != #{adminType} and </if>
            </trim>
        )as u on s.user_id = u.user_id
    </select>

    <select id="countUsers" parameterType="map" resultType="long">
        select count(user_id)
        from tb_status
        <trim prefix="where" suffixOverrides="and">
            <if test="resultType != null">`result` = #{resultType} and </if>
            <if test="problemId != null">`problem_id` = #{problemId} and </if>
        </trim>
    </select>

    <select id="countProblems" parameterType="map" resultType="long">
        select count(s.problem_id)
        from (
          select *
          from tb_status
          <trim prefix="where" suffixOverrides="and">
              <if test="resultType != null">`result` = #{resultType} and </if>
              <if test="userId != null">`user_id` = #{userId} and </if>
          </trim>
        ) as s
        left join (
          select *
          from tb_user
          <trim prefix="where" suffixOverrides="and">
              <if test="adminType != null">`type` != #{adminType}</if>
          </trim>
        ) as u on s.user_id = u.user_id
    </select>
</mapper>